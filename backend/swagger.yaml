swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
      # - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  # added transactions / transactions/{transactionId} / user/balance/
  /transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Get all transactions for the current month grouped by account
      description: Retrieves all transactions for the current month, grouped by account
      produces:
        - application/json
      responses:
        "200":
          description: Successfully retrieved transactions
          schema:
            $ref: "#/definitions/TransactionGroupedByAccount"
        "500":
          description: Internal Server Error
    post:
      tags:
        - Transactions
      summary: Add a new transaction
      description: Adds a new transaction
      parameters:
        - in: body
          name: body
          description: Transaction payload
          required: true
          schema:
            $ref: "#/definitions/TransactionWithoutAmount"
      produces:
        - application/json
      responses:
        "200":
          description: Transaction added successfully
          schema:
            $ref: "#/definitions/Transaction"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Get details of an user transaction
      description: Retrieves balance of a specific user
      parameters:
        - name: transactionId
          in: path
          description: ID of the transaction to retrieve
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Successfully retrieved transaction details
          schema:
            $ref: "#/definitions/Transaction"
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Update / delete details of a user transaction
      description: Updates / delete details of a specific user transaction
      parameters:
        - name: transactionId
          in: path
          description: ID of the transaction to update
          required: true
          type: string
        - in: body
          name: body
          description: Updated transaction payload
          required: true
          schema:
            $ref: "#/definitions/TransactionWithoutAmount"
      produces:
        - application/json
      responses:
        "200":
          description: Transaction updated successfully
          schema:
            $ref: "#/definitions/Transaction"
        "400":
          description: Invalid Fields
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error
  /user/balance/:
    post:
      security:
        - Bearer: []
      tags:
        - balance
      summary: Get the total user balance
      description: Retrieves details of a specific user transaction
      parameters:
        - in: body
          name: userID
          description: Get user balance by userID
          required: true
          schema:
            $ref: "#/definitions/UserBalance"
      produces:
        - application/json
      responses:
        "200":
          description: Successfully retrieved user balance
          schema:
            $ref: "#/definitions/UserBalanceResponse"
        "404":
          description: Balance for userID not found
        "500":
          description: Internal Server Error

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  Transaction:
    type: object
    properties:
      id:
        type: string
        description: Unique identifier for the transaction
      date:
        type: string
        format: date-time
        description: Date of the transaction
      amount:
        type: object
        properties:
          value:
            type: number
            description: Numeric value of the transaction amount
          currency:
            type: string
            description: Currency of the transaction amount
      description:
        type: object
        properties:
          transactionType:
            type: string
            description: Transaction type
          Category:
            type: string
            description: Category of transaction (example food)
          Note:
            type: string
            description: Additional note
  TransactionWithoutAmount:
    type: object
    properties:
      id:
        type: string
        description: Unique identifier for the transaction
      date:
        type: string
        format: date-time
        description: Date of the transaction
      description:
        type: object
        properties:
          transactionType:
            type: string
            description: Transaction type
          Category:
            type: string
            description: Category of transaction (example food)
          Note:
            type: string
            description: Additional note

  User:
    # added userId
    properties:
      userID:
        type: string
        description: user Identifier
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  # added
  UserBalance:
    properties:
      userID:
        type: string
        description: User Identifier
  # added
  UserBalanceResponse:
    properties:
      userID:
        type: string
        description: User Identifier
      balance:
        type: number
        description: User Balance
      currency:
        type: string
        description: Currency of the transaction amount
